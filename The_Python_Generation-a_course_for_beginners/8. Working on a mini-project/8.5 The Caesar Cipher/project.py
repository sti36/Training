"""–ê–≤–µ, –¶–µ–∑–∞—Ä—å üå∂Ô∏è
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–ª–æ–≤–∞. –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ —Å–ª–µ–¥—É–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è (—Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ —Å–¥–≤–∏–≥–∞ –Ω–∞ –¥–ª–∏–Ω—É —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞). –°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –ø—Ä–∏ —ç—Ç–æ–º –æ—Å—Ç–∞—é—Ç—Å—è —Å—Ç—Ä–æ—á–Ω—ã–º–∏, –∞ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ ‚Äì –ø—Ä–æ–ø–∏—Å–Ω—ã–º–∏. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö 
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –°–∏–º–≤–æ–ª—ã, –Ω–µ —è–≤–ª—è—é—â–∏–µ—Å—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏, –Ω–µ –∏–∑–º–µ–Ω—è—é—Ç—Å—è."""

def caesar_cipher(text):
    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
    def shift_char(c, n):
        '''–§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–¥–≤–∏–≥–∞ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞'''
        if c.islower():     # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ—á–Ω—ã–π
            base = ord('a') # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å 'a'
        elif c.isupper():   # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –∑–∞–≥–ª–∞–≤–Ω—ã–π
            base = ord('A') # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å 'A'
        else:               # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ –±—É–∫–≤–∞
            return c        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∏–º–≤–æ–ª —Å —É—á—ë—Ç–æ–º —Å–¥–≤–∏–≥–∞
        return chr((ord(c) - base + n) % 26 + base)

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
    words = text.split()
    result = []              # –ó–¥–µ—Å—å —Å–æ–±–∏—Ä–∞–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞

    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–ª–æ–≤—É
    for word in words:
        # –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã (–∏–≥–Ω–æ—Ä–∏—Ä—É—è –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è)
        letters_only = ''.join(filter(str.isalpha, word))
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–¥–≤–∏–≥ –∫–∞–∫ –¥–ª–∏–Ω—É —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
        shift = len(letters_only)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, –æ—Å—Ç–∞–≤–ª—è—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        encrypted_word = ''.join(
            [shift_char(ch, shift) if ch.isalpha() else ch for ch in word]
        )
        result.append(encrypted_word)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É
    return ' '.join(result)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é
input_text = input()
output_text = caesar_cipher(input_text)
print(output_text)